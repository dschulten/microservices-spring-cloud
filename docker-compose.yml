version: '3'

services:
  consul:
    image: consul
    command: consul agent -server -dev -client=0.0.0.0 -ui -bootstrap -log-level warn
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"
#  gateway:
#    image: escalon/gateway:latest
#    ports:
#      - "9090:8080"
#  reverse-proxy:
#    image: traefik-gateway # The official Traefik docker image
#    command: --api --consul --consul.endpoint=consul:8500 # Enables the web UI and tells Traefik to listen to docker
#    ports:
#      - "80:80"     # The HTTP port
#      - "8080:8080" # The Web UI (enabled by --api)
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events-
  reverse-proxy:
    image: traefik-gateway
    command: traefik --consulcatalog.endpoint=consul:8500
    ports:
      - "8080:8080"
      - "80:80"
    depends_on:
      - consul
    links:
      - consul

  registrator:
    depends_on:
      - consul
    image: gliderlabs/registrator:master
    command: -internal consul://consul:8500
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    links:
      - consul

  metrics:
    image: prometheus-metrics
    depends_on:
      - consul
    ports:
      - 9090:9090

  rest:
    image: escalon/camel-microservice-rest:latest
    expose:
      - "8080"
    environment:
      - SERVICE_TAGS=traefik.enable=true,traefik.frontend.entryPoints=http,traefik.frontend.rule=Host:localhost,metrics
#  rest1:
#    image: escalon/camel-microservice-rest:latest
#    ports:
#      - "8082:8080"
